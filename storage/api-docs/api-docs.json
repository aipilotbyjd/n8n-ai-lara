{
    "openapi": "3.0.0",
    "info": {
        "title": "N8N AI Workflow Automation Platform API",
        "description": "Ultra-scalable workflow automation platform with real-time execution, multi-tenancy, advanced queuing system, and comprehensive API documentation.",
        "contact": {
            "name": "N8N AI Support",
            "email": "api@n8n-ai-lara.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "Production API Server"
        },
        {
            "url": "http://localhost:8000",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/api/health": {
            "get": {
                "tags": [
                    "Monitoring"
                ],
                "summary": "API Health Check",
                "description": "Check the health status of the API and system components",
                "operationId": "healthCheck",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "healthy"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "1.0.0"
                                        },
                                        "services": {
                                            "properties": {
                                                "database": {
                                                    "type": "string",
                                                    "example": "connected"
                                                },
                                                "redis": {
                                                    "type": "string",
                                                    "example": "connected"
                                                },
                                                "queue": {
                                                    "type": "string",
                                                    "example": "operational"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "unhealthy"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service temporarily unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/queue/status": {
            "get": {
                "tags": [
                    "Queue",
                    "Monitoring"
                ],
                "summary": "Get Queue Status",
                "description": "Get comprehensive status of the background job queue system",
                "operationId": "getQueueStatus",
                "responses": {
                    "200": {
                        "description": "Queue status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/QueueStatus"
                                        },
                                        "health": {
                                            "$ref": "#/components/schemas/HealthStatus"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/metrics": {
            "get": {
                "tags": [
                    "Monitoring"
                ],
                "summary": "Get System Metrics",
                "description": "Get comprehensive system performance metrics and analytics",
                "operationId": "getSystemMetrics",
                "responses": {
                    "200": {
                        "description": "Metrics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "workflows": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "active": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "executions_today": {
                                                    "type": "integer",
                                                    "example": 2500
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "organizations": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "active": {
                                                    "type": "integer",
                                                    "example": 22
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "performance": {
                                            "properties": {
                                                "avg_execution_time": {
                                                    "type": "number",
                                                    "example": 2.5
                                                },
                                                "success_rate": {
                                                    "type": "number",
                                                    "example": 0.95
                                                },
                                                "throughput_per_minute": {
                                                    "type": "integer",
                                                    "example": 45
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account and return authentication token",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "description": "Bearer token for authentication",
                                                    "type": "string",
                                                    "example": "1|abc123def456"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "description": "Login with email and password to receive authentication token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "description": "Device name for token identification",
                                        "type": "string",
                                        "example": "My Laptop"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "description": "Bearer token for authentication",
                                            "type": "string",
                                            "example": "1|abc123def456"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided credentials are incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke the current authentication token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user profile",
                "description": "Get the authenticated user's profile information",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "List organizations",
                "description": "Get a list of organizations the authenticated user belongs to",
                "operationId": "getOrganizations",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organizations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Organization"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 25
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Create organization",
                "description": "Create a new organization",
                "operationId": "createOrganization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Organization name",
                                        "type": "string",
                                        "example": "My Company"
                                    },
                                    "description": {
                                        "description": "Organization description",
                                        "type": "string",
                                        "example": "Company description"
                                    },
                                    "slug": {
                                        "description": "URL-friendly identifier",
                                        "type": "string",
                                        "example": "my-company"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Organization created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Organization"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Organization created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/organizations/{organization}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get organization",
                "description": "Get a specific organization by ID",
                "operationId": "getOrganization",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "description": "Organization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Organization not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Update organization",
                "description": "Update an existing organization",
                "operationId": "updateOrganization",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "description": "Organization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Company Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "updated-company"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Organization updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Organization"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Organization updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete organization",
                "description": "Delete an organization",
                "operationId": "deleteOrganization",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "path",
                        "description": "Organization ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Organization deleted successfully"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User account information",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "admin",
                            "super_admin"
                        ],
                        "example": "user"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Organization": {
                "title": "Organization",
                "description": "Multi-tenant organization",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "My Company"
                    },
                    "slug": {
                        "type": "string",
                        "example": "my-company"
                    },
                    "description": {
                        "type": "string",
                        "example": "Company description",
                        "nullable": true
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "settings": {
                        "type": "object",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "subscription_status": {
                        "type": "string",
                        "example": "trial"
                    },
                    "subscription_plan": {
                        "type": "string",
                        "example": "free"
                    },
                    "trial_ends_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "subscription_ends_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "teams_count": {
                        "type": "integer",
                        "example": 5
                    },
                    "users_count": {
                        "type": "integer",
                        "example": 25
                    },
                    "workflows_count": {
                        "type": "integer",
                        "example": 15
                    }
                },
                "type": "object"
            },
            "Team": {
                "title": "Team",
                "description": "Collaborative team within an organization",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Development Team"
                    },
                    "description": {
                        "type": "string",
                        "example": "Backend development team",
                        "nullable": true
                    },
                    "organization_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "owner_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "color": {
                        "type": "string",
                        "example": "#3B82F6"
                    },
                    "settings": {
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "members_count": {
                        "type": "integer",
                        "example": 8
                    },
                    "workflows_count": {
                        "type": "integer",
                        "example": 12
                    }
                },
                "type": "object"
            },
            "Workflow": {
                "title": "Workflow",
                "description": "Automation workflow definition",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Email Notification Workflow"
                    },
                    "description": {
                        "type": "string",
                        "example": "Sends email notifications for new orders",
                        "nullable": true
                    },
                    "organization_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "team_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "draft"
                        ],
                        "example": "active"
                    },
                    "workflow_data": {
                        "description": "Workflow definition in JSON format",
                        "type": "object"
                    },
                    "settings": {
                        "type": "object",
                        "nullable": true
                    },
                    "version": {
                        "type": "integer",
                        "example": 1
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "email",
                            "notification"
                        ]
                    },
                    "execution_count": {
                        "type": "integer",
                        "example": 150
                    },
                    "last_executed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Execution": {
                "title": "Execution",
                "description": "Workflow execution record",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "workflow_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "running",
                            "success",
                            "error",
                            "cancelled"
                        ],
                        "example": "success"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "manual",
                            "trigger",
                            "schedule",
                            "webhook"
                        ],
                        "example": "manual"
                    },
                    "input_data": {
                        "description": "Execution input parameters",
                        "type": "object"
                    },
                    "output_data": {
                        "description": "Execution results",
                        "type": "object"
                    },
                    "error_message": {
                        "type": "string",
                        "nullable": true
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "duration": {
                        "description": "Execution time in milliseconds",
                        "type": "integer",
                        "example": 2500
                    },
                    "retry_count": {
                        "type": "integer",
                        "example": 0
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Credential": {
                "title": "Credential",
                "description": "Secure API credential storage",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Stripe API Key"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "stripe",
                            "aws",
                            "google",
                            "custom"
                        ],
                        "example": "stripe"
                    },
                    "organization_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "description": "Encrypted credential data",
                        "type": "object"
                    },
                    "shared": {
                        "type": "boolean",
                        "example": false
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "QueueStatus": {
                "title": "Queue Status",
                "description": "Background job queue status",
                "properties": {
                    "default": {
                        "properties": {
                            "pending": {
                                "type": "integer",
                                "example": 5
                            },
                            "processing": {
                                "type": "integer",
                                "example": 2
                            },
                            "failed": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    "high-priority": {
                        "properties": {
                            "pending": {
                                "type": "integer",
                                "example": 2
                            },
                            "processing": {
                                "type": "integer",
                                "example": 1
                            },
                            "failed": {
                                "type": "integer",
                                "example": 0
                            }
                        },
                        "type": "object"
                    },
                    "total": {
                        "properties": {
                            "pending": {
                                "type": "integer",
                                "example": 7
                            },
                            "processing": {
                                "type": "integer",
                                "example": 3
                            },
                            "failed": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "HealthStatus": {
                "title": "Health Status",
                "description": "System health monitoring",
                "properties": {
                    "overall_health": {
                        "description": "Health score 0-100",
                        "type": "integer",
                        "example": 85
                    },
                    "queues": {
                        "$ref": "#/components/schemas/QueueStatus"
                    },
                    "recommendations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "High queue backlog detected",
                            "Consider scaling up workers"
                        ]
                    },
                    "last_checked": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Laravel Sanctum Bearer Token Authentication. Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication endpoints"
        },
        {
            "name": "Organizations",
            "description": "Organization management endpoints"
        },
        {
            "name": "Queue",
            "description": "Background job queue monitoring and management"
        },
        {
            "name": "Monitoring",
            "description": "System monitoring and analytics"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}